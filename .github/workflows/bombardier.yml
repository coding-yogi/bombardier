name: bombardier

on:
  push:
    tags:
      - '*'
    paths-ignore: 
      - 'docs/**'
      - 'readme.md'
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  Docker:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/bombardier:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: tests
      run: cargo test
    - name: build
      run: cargo build --release
    - name: release
      uses: svenstaro/upload-release-action@v1-release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./target/release/bombardier
        asset_name: bombardier-linux
        tag: ${{ github.ref }}

  MacOs:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: get libxml2, pkg-config 
      run: brew install pkg-config libxml2; export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"
    - name: tests
      run: cargo test
    - name: build
      run: cargo build --release
    - name: release
      uses: svenstaro/upload-release-action@v1-release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./target/release/bombardier
        asset_name: bombardier-macos
        tag: ${{ github.ref }}