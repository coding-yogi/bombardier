name: bombardier

on:
  push:
    tags:
      - '*'
    paths-ignore: 
      - 'docs/**'
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: cargo build --release
    - name: release
      uses: svenstaro/upload-release-action@v1-release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./target/release/bombardier
        asset_name: bombardier-linux
        tag: ${{ github.ref }}

  MacOs:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: get libxml2, pkg-config 
      run: brew install pkg-config libxml2; export PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig"
    - name: build
      run: cargo build --release
    - name: release
      uses: svenstaro/upload-release-action@v1-release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./target/release/bombardier
        asset_name: bombardier-macos
        tag: ${{ github.ref }}

  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: numworks/setup-msys2@v1
    - uses: actions-rs/toolchain@v1
      with:
        target: x86_64-pc-windows-gnu
        toolchain: stable-x86_64-pc-windows-gnu
        default: true
        override: true
    - name: Install mingw64 toolchain & libxml2
      run: msys2do pacman --noconfirm -S mingw-w64-x86_64-toolchain  mingw-w64-x86_64-libxml2
    - name: Build
      env:
        MINGW64_HOME_PATH: D:\a\_temp\msys\msys64\mingw64
        PKG_CONFIG_PATH: $MINGW64_HOME_PATH\lib\pkgconfig
        PATH: $MINGW64_HOME_PATH\bin;$PATH
      run: |
        echo $env:MINGW64_HOME_PATH
        echo $env:PKG_CONFIG_PATH
        echo $env:PATH
        Add-Content ~/.cargo/config "
        [target.x86_64-pc-windows-gnu]
        linker = `"D:\\a\\_temp\\msys\\msys64\\mingw64\\bin\\x86_64-w64-mingw32-gcc.exe`"
        ar = `"D:\\a\\_temp\\msys\\msys64\\mingw64\\bin\\x86_64-w64-mingw32-gcc-ar.exe`""
        
        cargo build --release --target=x86_64-pc-windows-gnu  
    - name: Zip with dependencies
      run: |
        cd "D:\a\_temp\msys\msys64\mingw64\bin"
        $compress = @{
          Path = "D:\a\bombardier\bombardier\target\x86_64-pc-windows-gnu\release\bombardier.exe", "libxml2-2.dll", "libiconv-2.dll", "liblzma-5.dll", "zlib1.dll"
          CompressionLevel = "Fastest"
          DestinationPath = "D:\a\bombardier\bombardier\bombardier-win-x86-64.zip"
        }
        Compress-Archive @compress
    - name: Release
      uses: svenstaro/upload-release-action@v1-release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: .\target\x86_64-pc-windows-gnu\release\bombardier.exe
        asset_name: bombardier-win-x86_64.exe
        tag: ${{ github.ref }}
        
    - name: upload atrifact
      uses: actions/upload-artifact@v1
      with:
        name: bombardier-win-x64.zip
        path: D:\a\bombardier\bombardier\bombardier-win-x86-64.zip
